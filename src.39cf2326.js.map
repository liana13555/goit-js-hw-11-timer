{"version":3,"sources":["index.js"],"names":["CountdownTimer","constructor","selector","targetDate","refs","days","document","querySelector","hours","mins","secs","setInterval","startDate","Date","now","time","getTimeComponents","updateClockface","getElementById","innerHTML","pad","Math","floor","value","String","padStart","textContent","timer"],"mappings":";;;AA8CA,aA9CA,QAAA,oBAEA,MAAMA,EACFC,aAAY,SAAEC,EAAF,WAAYC,IACfD,KAAAA,SAAWA,EACXC,KAAAA,WAAaA,EACbC,KAAAA,KAAO,CACRC,KAAMC,SAASC,cAAc,uBAC7BC,MAAOF,SAASC,cAAc,wBAC9BE,KAAMH,SAASC,cAAc,uBAC7BG,KAAMJ,SAASC,cAAc,wBAGjCI,YAAY,KACFC,MAAAA,EAAYC,KAAKC,MACjBC,EAAO,KAAKZ,WAAaS,EAC3BG,GAAAA,EAAO,EAAG,CACJ,MAAA,KAAEV,EAAF,MAAQG,EAAR,KAAeC,EAAf,KAAqBC,GAAS,KAAKM,kBAAkBD,GACtDE,KAAAA,gBAAgB,KAAKD,kBAAkBD,SAE5CT,SAASY,eAAe,WAAWC,UAAY,YAEpD,KAGPH,kBAAkBD,GAMX,MAAA,CAAEV,KALK,KAAKe,IAAIC,KAAKC,MAAMP,EAAQ,QAK3BP,MAJD,KAAKY,IAAIC,KAAKC,MAAOP,EAAQ,MAAyB,OAI9CN,KAHR,KAAKW,IAAIC,KAAKC,MAAOP,EAAQ,KAAoB,MAGnCL,KAFd,KAAKU,IAAIC,KAAKC,MAAOP,EAAQ,IAAc,OAKzDK,IAAIG,GACGC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,KAGjCR,iBAAgB,KAAEZ,EAAF,MAAQG,EAAR,KAAeC,EAAf,KAAqBC,IAChCN,KAAAA,KAAKC,KAAKqB,eAAiBrB,IAC3BD,KAAAA,KAAKI,MAAMkB,eAAiBlB,IAC5BJ,KAAAA,KAAKK,KAAKiB,eAAiBjB,IAC3BL,KAAAA,KAAKM,KAAKgB,eAAiBhB,KAIpC,MAAMiB,EAAS,IAAI3B,EAAe,CAC9BE,SAAU,WACVC,WAAY,IAAIU,KAAK","file":"src.39cf2326.js","sourceRoot":"../src","sourcesContent":["import './sass/main.scss';\n\nclass CountdownTimer {\n    constructor({ selector, targetDate}) {        \n        this.selector = selector;\n        this.targetDate = targetDate;\n        this.refs = {\n            days: document.querySelector('[data-value=\"days\"]'),\n            hours: document.querySelector('[data-value=\"hours\"]'),\n            mins: document.querySelector('[data-value=\"mins\"]'),\n            secs: document.querySelector('[data-value=\"secs\"]'),\n        };\n\n        setInterval(() => {\n            const startDate = Date.now();\n            const time = this.targetDate - startDate;\n            if (time > 0) {\n                const { days, hours, mins, secs } = this.getTimeComponents(time);\n                this.updateClockface(this.getTimeComponents(time));\n            } else {\n                document.getElementById(\"timer-1\").innerHTML = \"EXPIRED!\";\n            }            \n        }, 1000);\n    }\n\n    getTimeComponents(time) {\n    const days =  this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\n    const hours = this.pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n    const mins =  this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n    const secs =  this.pad(Math.floor((time % (1000 * 60)) / 1000));\n\n    return { days, hours, mins, secs };\n    }\n\n    pad(value) {\n    return String(value).padStart(2, '0');\n    }\n\n    updateClockface({ days, hours, mins, secs }) {\n    this.refs.days.textContent = `${days}`;\n    this.refs.hours.textContent = `${hours}`;\n    this.refs.mins.textContent = `${mins}`;\n    this.refs.secs.textContent = `${secs}`; \n}\n};\n\nconst timer =  new CountdownTimer({\n    selector: '#timer-1',\n    targetDate: new Date('Jul 27, 2021'),    \n});\n"]}